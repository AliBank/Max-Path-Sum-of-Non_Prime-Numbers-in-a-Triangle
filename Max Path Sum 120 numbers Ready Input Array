#include <stdio.h>
#include <stdlib.h>
#include <math.h>



int main()
{
      
  int matris[15][15];
  int uzunluk;
  int sira;
  int i;
  int j;
  int array[120]= {215,
193, 124,
117, 237, 442,
218, 935, 347, 235,
320, 804, 522, 417, 345,
229 ,601 ,723, 835, 133 ,124,
248 ,202 ,277 ,433, 207, 263 ,257,
359 ,464, 504 ,528 ,516 ,716, 871,182,
461 ,441, 426 ,656 ,863 ,560 ,380 ,171 ,923,
381 ,348 ,573, 533, 447, 632, 387, 176, 975, 449,
223 ,711, 445, 645 ,245 ,543, 931, 532, 937, 541 ,444,
330 ,131, 333, 928, 377, 733, 17, 778, 839, 168, 197 ,197,
131 ,171 ,522 ,137, 217 ,224 ,291, 413, 528, 520 ,227 ,229, 928,
223 ,626, 34, 683 ,839 ,53 ,627, 310 ,713 ,999 ,629 ,817, 410, 121,
924, 622, 911, 233, 325, 139, 721, 218, 253, 223, 107, 233, 230, 124, 233} ;
  int a=-5;
  int b;
  int counter = 0;
  int n=0;
  int flag=0;
  int d=0;
  int e;
  int max; 
  int c=0;
  int k;


  
  /*for(i=0; i<226; i++)
  {
      array[i]=0;
  }
  */
   
  for(i=0; i<15; i++)
  {
      for(j=0; j<15; j++)
      {
          matris[i][j]= 0;
      }
  }
             
     
      i=0;
         
// printf(" enter -2 when you finish entering variables. \n");
  
  
  
   while ((i<120) && (a != -2))
   {
 // printf("Please, enter traingle numbers: \n");
  //scanf("%d", &a ); 
  
    //if (a != -2)
      //  {
            if((array[i]!=0) && (array[i]!=1))
            {
                c=0;
          for (k = 1; k <= array[i]; k++)
          {
      
      if (array[i] % k == 0) 
      {
         c++;
      }
  }

  if (c == 2) 
  {
        array[i]=-1;
  }
  
            }
            
            //array[i]= a;
        
            ++counter;
        //}
       // array[i]= a;
        //++counter;
        ++i;
     }
       
  
     while(flag==0)
     {
    if ( ((n * (n+1))/2) == (counter))
    {
         flag=1;
    }    
         ++n;
     }     
     
      --n;
      
    uzunluk = n;
    
      
      for(i=0; i<uzunluk; i++ )
    {
        for(j=0; j<=(i); j++ )
        {
            matris[i][j]=array[d];
            ++d;
        }
        
    }
    
      
  for(i=0; i<15; i++)
  {
      for(j=0; j<15; j++)
      {
         e = matris[i][j];
         printf("%d \t", e );
      }
      printf("\n");
  }
    
    
   
  
  for(i=0; i<(uzunluk-1); i++ )
  {
      // for(sira=0; sira<=i; sira++ )
       //{
       
       sira=0;
     while(sira<i)                                                 // while ((i+1) != (uzunluk+1))
  {
      if  (matris[i+1][sira+1] !=-1)
    {
      
      if ((matris[i][sira]!= -1) && (matris[i][sira+1] != -1))
     
      {
     
      if (matris[i][sira] > matris[i][sira+1])
      {
      matris[i+1][sira+1] = matris[i+1][sira+1] + matris[i][sira] ;
      }
      
      else
      {
      matris[i+1][sira+1] = matris[i+1][sira+1] + matris[i][sira+1] ;
      }
      
          
      }
      
     
     
      if ((matris[i][sira]== -1) && (matris[i][sira+1] == -1))
      {
          matris[i+1][sira+1] = -1;
      }
      
     
      if ((matris[i][sira]== -1) && (matris[i][sira+1] != -1))
       {
            matris[i+1][sira+1] = matris[i+1][sira+1] + matris[i][sira+1] ;
       }
       
      
      if ((matris[i][sira] != -1) && (matris[i][sira+1] == -1))
        {
            matris[i+1][sira+1] = matris[i+1][sira+1] + matris[i][sira] ;
        }
      
    }
      ++sira;
  
      
  }
 
  if (matris[i+1][0] !=-1)
  {
       if (matris[i][0] !=-1 )
       {
        matris[i+1][0]=  matris[i+1][0] + matris[i][0];
       }
        else
       {
        matris[i+1][0]= -1;
       }
  }
       
       if (matris[i+1][i+1] !=-1 )
       {
        if (matris[i][i] !=-1 )
        {
        matris[i+1][i+1]  =  matris[i][i] + matris[i+1][i+1];
        }
        else
        {
         matris[i+1][i+1]= -1;
        } 
       }
                                                                                           // }
 }
 
 printf("\n");
 printf("\n");
 printf("\n");
 
 
  for(i=0; i<15; i++)
  {
      for(j=0; j<15; j++)
      {
         e = matris[i][j];
         printf("%d \t", e );
      }
      printf("\n");
  }
    
 
 max=-1;
 
  for(i=0; i<(uzunluk-1); i++ )
  {
  
 if (matris[uzunluk-1][i] > matris[uzunluk-1][i+1])
 {
      if (matris[uzunluk-1][i] >max)
     max = matris[uzunluk-1][i];
     
 }
   else
   {
        if (matris[uzunluk-1][i+1] > max)
      max = matris[uzunluk-1][i+1];
   }
 
  }
  
 printf(" maximum sum of the numbers: %d ", max);
